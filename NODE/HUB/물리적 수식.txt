🎉 HUBROOM 반송량 예측 전용 프롬프트 완성!
📋 기본 프롬프트 (즉시 사용 가능)
markdown# HUBROOM 반송량 예측 시스템 프롬프트

## 🎯 미션
당신은 반도체 FAB의 HUBROOM 반송량 예측 전문가입니다.
과거 20분간의 데이터를 분석하여 10분 후의 CURRENT_M16A_3F_JOB_2 값을 정확히 예측하세요.

## 🔗 핵심 특성 우선순위

### 1순위: 기본 구성 요소 (가중치: 40%)
- **CURRENT_M16A_3F_JOB**: 순수 HUBROOM 내 JOB

### 2순위: 유입 흐름 특성 (가중치: 25%)
- **M16A_6F_TO_HUB_JOB**: M16A 6층 → HUBROOM
- **M16A_2F_TO_HUB_JOB2**: M16A 2층 → HUBROOM  
- **M14A_3F_TO_HUB_JOB2**: M14A 3층 → HUBROOM
- **M14B_7F_TO_HUB_JOB2**: M14B 7층 → HUBROOM
- **M16B_10F_TO_HUB_JOB**: M16B 10층 → HUBROOM

### 3순위: 유출 흐름 특성 (가중치: 20%)
- **M16A_3F_TO_M16A_6F_JOB**: HUBROOM → M16A 6층
- **M16A_3F_TO_M16A_2F_JOB**: HUBROOM → M16A 2층
- **M16A_3F_TO_M14A_3F_JOB**: HUBROOM → M14A 3층
- **M16A_3F_TO_M14B_7F_JOB**: HUBROOM → M14B 7층

### 4순위: 용량 제약 (가중치: 10%)
- **M16A_3F_STORAGE_UTIL**: HUBROOM 잔여 Storage

### 5순위: 제어 신호 (가중치: 5%)
- **M16A_6F_TO_HUB_CMD**: 미래 유입 명령 신호

## 📏 현실성 체크
- **정상 범위**: 현재값 ± 20%
- **물리적 한계**: 400개 절대 초과 불가
- **최대 변화**: 분당 ±5개

## 💡 출력 형식
```json
{
  "predicted_value": 숫자,
  "confidence_range": [최소값, 최대값],
  "key_factors": ["주요 영향 요인들"],
  "trend_analysis": "증가/감소/안정"
}

## 🚀 **사용법**

### **Step 1: 데이터 입력**
과거 20분 데이터 (15:40~15:59):
CURRENT_M16A_3F_JOB_2: [267, 268, 262, ..., 260]
CURRENT_M16A_3F_JOB: [213, 202, 202, ..., 198]
M16A_6F_TO_HUB_JOB: [107, 108, 97, ..., 110]
...

### **Step 2: 프롬프트 실행**
"위 프롬프트를 따라 2025년 8월 26일 16:09의 CURRENT_M16A_3F_JOB_2를 예측하세요."

### **Step 3: 예상 출력**
```json
{
  "predicted_value": 265,
  "confidence_range": [258, 272],
  "key_factors": ["유입 흐름 안정", "Storage 여유", "최근 상승 트렌드"],
  "trend_analysis": "약간 증가"
}
🎯 프롬프트의 핵심 장점

체계적 분석: 우선순위별 특성 분석
물리적 제약: 현실 불가능한 예측 방지
가중치 적용: 중요도에 따른 차등 반영
구조화된 출력: JSON 형태로 명확한 결과

이 프롬프트로 633 같은 비현실적 예측 대신 260-270 범위의 합리적 예측을 얻을 수 있습니다! 🚀





📊 기본 구성:
CURRENT_M16A_3F_JOB_2 = CURRENT_M16A_3F_JOB + Bridge_포트_JOB들

🔄 동적 변화:
다음분_JOB_2 = 현재_JOB_2 + 
                (유입_JOB들의_합 - 유출_JOB들의_합) + 
                제어신호_영향 + 
                용량제약_보정

💡 세부 계산:
유입_합계 = M16A_6F_TO_HUB_JOB + M16A_2F_TO_HUB_JOB2 + 
           M14A_3F_TO_HUB_JOB2 + M14B_7F_TO_HUB_JOB2 + 
           M16B_10F_TO_HUB_JOB

유출_합계 = M16A_3F_TO_M16A_6F_JOB + M16A_3F_TO_M16A_2F_JOB + 
           M16A_3F_TO_M14A_3F_JOB + M16A_3F_TO_M14B_7F_JOB + 
           M16A_3F_TO_3F_MLUD_JOB

순증가량 = 유입_합계 - 유출_합계

용량제약 = f(M16A_3F_STORAGE_UTIL, 각종_MAXCAPA들)

≠
🎯 핵심 원인: AMHS는 '물리적 실체의 이동 시스템'
🏭 AMHS 시스템의 본질

물리적 실체: 웨이퍼 Carrier(운반통)
보존 법칙: 생성/소멸 불가, 이동만 가능
공간 제약: 한 번에 한 곳에만 존재
시간 제약: 이동은 시간이 소요됨

🌊 물탱크 비유 (완벽한 동일 원리)
💧 물탱크:
유입관들 → [물탱크] → 유출관들
물 높이 변화 = 유입량 - 유출량

🏭 HUBROOM:
유입 JOB들 → [HUBROOM] → 유출 JOB들  
JOB 변화 = 유입 JOB - 유출 JOB
⚖️ 보존 법칙이 적용되는 4가지 이유
1. 물리적 실체

Carrier는 물리적 객체
임의 생성/소멸 불가능
결과: 총 개수 보존

2. 공간의 유일성

하나의 Carrier ≠ 동시 다중 위치
이동 시 이전위치(-1), 새위치(+1)
결과: 위치별 정확한 증감

3. 이동의 연속성

순간이동 불가
경로를 따라 연속 이동
결과: 이동 중 JOB 추적 가능

4. 시스템 경계

HUBROOM = 명확한 물리적 공간
경계 통과 시 측정 가능
결과: 모든 유입/유출 파악

🎲 왜 633 같은 비현실적 예측이 나왔을까?
❌ 기존 모델의 문제점

순수 AI 학습: 물리 법칙 무시
패턴만 의존: 633 = 260의 2.4배 (불가능!)
관계 미고려: 유입/유출 밸런스 무시
제약 무시: Storage, MaxCapa 한계 미반영

✅ 올바른 접근

물리 법칙 기반 → 현실적 예측 (260±10)
패턴 학습만 → 비현실적 예측 (633)

🏆 핵심 통찰
💡 물리 법칙 = 강력한 제약조건

보존 법칙으로 예측 범위 제한
비현실적 예측 원천 차단

⚖️ 밸런스 방정식 = 예측의 기본
HUBROOM 변화 = 유입_합계 - 유출_합계

간단하지만 매우 강력한 원리
물리학의 연속성 방정식과 동일

🎛️ 제약 조건 = 현실성 보장

MaxCapa, Storage 한계 반영
물리적 불가능한 예측 배제

💫 최종 교훈

"AI는 강력하지만, 물리 법칙을 무시할 수는 없다"

이제 물리 기반 모델로 633 대신 260-270의 현실적이고 정확한 예측이 가능합니다! 🚀


