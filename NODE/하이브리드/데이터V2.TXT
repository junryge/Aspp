반도체 물류량 급증 예측 시스템 소개
개요
반도체 제조 공정에서 팹(FAB) 간 물류 이동량을 실시간으로 모니터링하고, 10분 후의 물류량을 예측하는 AI 기반 예측 시스템입니다. 특히 물류량이 급증하는 구간(1400 초과)을 사전에 감지하여 운영 효율성을 극대화합니다.
시스템의 필요성
현재 상황

반도체 생산 라인 간 물류 이동량이 갑작스럽게 증가하는 경우 발생
정상 물류량: 1000~1300개
급증 시: 1500~4000개 (최대 4배 증가)
급증 빈도: 전체 시간의 약 1-2%

문제점

급증 시 물류 병목현상으로 생산 지연
사전 대응 불가로 운영 비효율 발생
긴급 인력 배치 등 추가 비용 발생

예측 시스템의 핵심 기능
1. 실시간 모니터링

6개 주요 이동 경로별 물류량 추적
1분 단위 데이터 수집 및 분석

2. 10분 후 예측

과거 100분 데이터를 기반으로 10분 후 물류량 예측
급증 가능성을 확률로 제시 (예: "10분 후 급증 확률 85%")

3. 조기 경보 시스템

3단계 경보: 정상 → 주의 → 경고
특정 구간 과부하 시 즉시 알림

기술적 차별점
1. 다중 데이터 활용

전체 물류량뿐만 아니라 개별 구간 데이터 분석
급증과 높은 상관관계를 보이는 특정 구간(M14A↔M14B, M14A↔M16) 중점 모니터링

2. 하이브리드 AI 모델

LSTM, GRU, RNN 등 4개 딥러닝 모델 앙상블
정상 예측과 급증 예측을 별도로 학습하는 이중 구조

3. 지속적 학습

새로운 패턴 발생 시 자동 학습
계절성, 주기성 변화에 적응

기대 효과
정량적 효과

급증 예측 정확도: 70~80%
예측 시점: 10분 전 사전 감지
평균 절대 오차: ±50개 이내

정성적 효과

사전 인력 배치로 병목현상 최소화
물류 대기 시간 30% 감소
긴급 대응 비용 연간 20% 절감
생산 일정 준수율 향상

활용 방안
1. 운영팀

실시간 대시보드로 현황 파악
급증 예상 시 사전 준비 (인력, 장비)

2. 생산 계획팀

병목 구간 데이터 기반 생산 스케줄 최적화
장기적 물류 흐름 개선 방안 수립

3. 경영진

운영 효율성 지표 모니터링
투자 의사결정 데이터 확보

향후 발전 방향

예측 정확도 향상: 외부 변수(주문량, 설비 상태) 통합
예측 시간 확대: 30분, 1시간 후 예측으로 확장
자동 대응 시스템: 예측 결과에 따른 자동 자원 배분

이 시스템을 통해 반도체 제조 공정의 물류 효율성을 크게 개선하고, 예측 가능한 운영 환경을 구축할 수 있습니다.



반도체 물류 예측 모델 개선 사항 보고서
개요
기존 모델이 TOTALCNT 1400 초과 급증을 제대로 예측하지 못하는 문제를 해결하기 위해, 개별 물류 구간 데이터를 활용한 새로운 예측 모델을 개발했습니다.

🔄 주요 변경 사항
1. 데이터 활용 방식의 전면 개선
[기존]

TOTALCNT(전체 물류량)만 사용
단순 시계열 패턴 학습
급증 구간 예측 정확도 부족

[개선]

6개 개별 물류 구간 데이터 추가 활용

M14AM10A, M10AM14A, M14AM14B, M14BM14A, M14AM16, M16M14A


급증 전조 현상 포착을 위한 특징 생성

각 구간의 TOTALCNT 대비 비율
10분간 변화율 계산
M14AM14B, M16M14A 구간의 급증 신호 감지



2. 모델 구조의 혁신적 변경
[기존]

단일 출력: TOTALCNT 수치만 예측
급증 여부를 간접적으로만 판단

[개선]

이중 출력 구조 도입

출력 1: TOTALCNT 수치 예측
출력 2: 1400 초과 확률 예측 (0~1 사이 값)


수치 예측과 급증 감지를 동시에 수행

3. 학습 방식 최적화
[기존]

모든 데이터에 동일한 가중치
일반적인 MSE 손실 함수 사용

[개선]

급증 구간(TOTALCNT > 1400)에 5배 가중치 부여
급증 예측 실패 시 추가 페널티 부과
급증 분류 정확도에 2배 가중치로 학습 강화

4. 예측 후처리 로직 추가
[기존]

모델 예측값을 그대로 사용
급증 가능성 고려 없음

[개선]

급증 확률 70% 이상 시 예측값 15% 상향 조정
개별 구간 이상 패턴 감지 시 경고 알림
실시간 급증 위험도 모니터링 가능

5. 평가 지표 확대
[기존]

MAE, RMSE 등 일반적인 회귀 지표만 사용

[개선]

급증 예측 전용 지표 추가

Precision: 급증 예측의 정확도
Recall: 실제 급증 중 예측 성공률
F1-Score: 종합 성능 지표


혼동 행렬을 통한 상세 분석


💡 핵심 개선 효과

급증 예측 정확도 향상

목표: 10분 후 TOTALCNT > 1400 예측 정확도 70% 이상
M14AM14B, M16M14A 구간의 2-3배 증가 패턴 학습


사전 대응 시간 확보

10분 전 급증 예측으로 물류 병목 사전 대응
개별 구간별 이상 징후 조기 감지


운영 효율성 증대

급증 확률 기반 의사결정 지원
구간별 상세 분석으로 병목 원인 파악 용이




📊 기대 효과

물류 지연 감소: 사전 예측을 통한 선제적 대응
운영 비용 절감: 급증 상황 대비 리소스 효율적 배치
생산성 향상: 병목 구간 해소로 전체 물류 흐름 개선

이번 개선을 통해 단순 수치 예측을 넘어, 실제 운영에 필요한 급증 예측에 특화된 지능형 물류 예측 시스템을 구축했습니다.





딥러닝 모델 수식 비교
📊 1. 입력 데이터 차원
[기존 모델]
X_t = [TOTALCNT_t, MA_5_t, MA_10_t, MA_30_t, STD_5_t, STD_10_t, ...]
입력 차원: (30, 7~10개 특징)
[개선 모델]
X_t = [TOTALCNT_t, M14AM10A_t, M10AM14A_t, M14AM14B_t, M14BM14A_t, M14AM16_t, M16M14A_t,
       M14AM14B_ratio_t, M16M14A_ratio_t, M14AM14B_change_10_t, M16M14A_change_10_t, ...]
입력 차원: (30, 25~30개 특징)
🔢 2. 모델 출력 구조
[기존 모델]
y = f(X) 
여기서 y ∈ ℝ (단일 실수값)
[개선 모델]
(y₁, y₂) = f(X)
여기서 y₁ ∈ ℝ (수치 예측)
      y₂ ∈ [0, 1] (급증 확률)
📈 3. 손실 함수
[기존 모델]
L = MSE = 1/n ∑(y_true - y_pred)²
[개선 모델]
L_total = λ₁·L_regression + λ₂·L_classification

여기서:
L_regression = 1/n ∑(y₁_true - y₁_pred)² × w_i
L_classification = -1/n ∑[y₂_true·log(y₂_pred) + (1-y₂_true)·log(1-y₂_pred)]

w_i = { 5.0  if y_true > 1400 (급증 구간)
      { 1.0  otherwise

λ₁ = 1.0 (회귀 가중치)
λ₂ = 2.0 (분류 가중치)
🎯 4. 급증 예측 수식
[기존 모델]
급증 판단 = { 1 if y_pred > 1400
            { 0 otherwise
[개선 모델]
y_final = y₁_pred × α
여기서 α = { 1.15 if y₂_pred > 0.7 (급증 확률 70% 이상)
           { 1.00 otherwise

급증 판단 = y₂_pred (연속적 확률값)
🧮 5. 특징 엔지니어링 수식
[기존 모델]
특징 = {
  MA_k = 1/k ∑(i=t-k+1 to t) TOTALCNT_i
  STD_k = √(1/k ∑(i=t-k+1 to t) (TOTALCNT_i - MA_k)²)
  change_rate = (TOTALCNT_t - TOTALCNT_{t-1}) / TOTALCNT_{t-1}
}
[개선 모델]
특징 = 기존 특징 + {
  segment_ratio = segment_value / TOTALCNT
  segment_change_10 = (segment_t - segment_{t-10}) / segment_{t-10}
  spike_signal = { 1 if segment_change_10 > 0.5
                 { 0 otherwise
}
📐 6. 모델 아키텍처 수식
[기존 모델]
h_t = LSTM(X_t, h_{t-1})
output = Dense(h_final)
[개선 모델]
h_t = LSTM(X_t, h_{t-1})
shared_features = Dense(h_final)

output₁ = Dense_regression(shared_features)
output₂ = Sigmoid(Dense_classification(shared_features))
📊 7. 평가 지표
[기존 모델]
MAE = 1/n ∑|y_true - y_pred|
R² = 1 - (∑(y_true - y_pred)²) / (∑(y_true - ȳ)²)
[개선 모델]
기존 지표 + {
  Precision = TP / (TP + FP)
  Recall = TP / (TP + FN)
  F1-Score = 2 × (Precision × Recall) / (Precision + Recall)
}

여기서 TP = True Positive (급증 맞춤)
      FP = False Positive (급증 오판)
      FN = False Negative (급증 놓침)
🔍 핵심 차이점 요약

입력 차원: 7-10개 → 25-30개 특징
출력 차원: 1개 → 2개 (수치 + 확률)
손실 가중치: 균일 → 급증 구간 5배 가중
예측 조정: 없음 → 급증 확률 기반 15% 상향
평가 방식: 회귀 지표만 → 회귀 + 분류 지표